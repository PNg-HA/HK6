SYS_EXIT equ 1
SYS_WRITE equ 4
STDOUT equ 1
section .data
x dd 123
msgX db "x="
section .text
global _start
_start:
    mov ecx, msgX
    mov edx, 4
    call _printString
    mov eax, [x]
    call _printDec
    mov ebx, 0
    mov eax, 1
    int 0x80
_printString:
    push eax
    push ebx
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    int 0x80
    pop ebx
    pop eax
    ret
_printDec:
section .bss
    .decstr resb 10
    .ct1 resd 1
section .text
    pushad
    mov dWord[.ct1], 0
    mov edi, .decstr
    add edi, 9
    xor edx, edx
.WhileNotZero:
    mov ebx, 10
    div ebx
    add edx, '0'
    mov byte[edi], dl
    dec edi
    inc dWord[.ct1]
    xor edx, edx
    cmp eax, 0
    jne .WhileNotZero
    inc edi
    mov ecx, edi
    mov edx, [.ct1]
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    int 0x80
    
    popad
    ret